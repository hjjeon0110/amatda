<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Trainer">
	<resultMap type="com.kh.amd.member.model.vo.TrainerInfo" id="trainerResultSet">
		<id property="mno" column="TNO" /><!-- DB 기본키 -->
		<result property="accountName" column="ACCOUNT_NAME" />
		<result property="bankCode" column="BANKCODE" />
		<result property="accountNo" column="ACCOUNT_NO" />
		<result property="tage" column="TAGE" />
		<result property="topen" column="TOPEN" />
		<result property="remainNum" column="REMAIN_NUM" />
	</resultMap>
	<resultMap type="com.kh.amd.trainer.model.vo.Profile" id="profileResultSet">
		<id property="profileno" column="PROFILE_NO" />
		<result property="tno" column="TNO" />
		<result property="lineProfile" column="LINE_PROFILE" />
		<result property="proTitle" column="PRO_TITLE" />
		<result property="intro" column="INTRO" />
		<result property="media" column="MEDIA" />
		<result property="certificate" column="CERTIPICATE" />
		<result property="keyword" column="KEYWORD" />
	</resultMap>
	<resultMap type="Estimate" id="estimateResultSet">
		<id property="estNo" column="EST_NO" />
		<result property="estName" column="EST_NAME" />
		<result property="estPrice" column="EST_COST" />
		<result property="estDay" column="TRAINING_DAYS" />
		<result property="estContents" column="EST_CONTENTS" />
		<result property="estType" column="EST_TYPE" />
		<result property="tno" column="TNO" />
	</resultMap>
	<resultMap type="Attachment" id="attachmentResultSet">
		<id property="fileNo" column="FILE_NO" />
		<result property="bno" column="BNO" />
		<result property="pno" column="PNO" />
		<result property="link" column="LINK" />
		<result property="oriName" column="ORI_NAME" />
		<result property="modiName" column="MODI_NAME" />
		<result property="extension" column="EXTENSION" />
		<result property="fileLevel" column="FILE_LEVEL" />
		<result property="uploadDate" column="UPLOAD_DATE" />
		<result property="aType" column="ATYPE" />
		<result property="aStatus" column="A_STATUS" />
		<result property="filePath" column="FILE_PATH" />
	</resultMap>
	<resultMap id="paymentResultSet" type="Payment">
		<id column="PAY_NO" property="payNo"/>		
		<result column="MEMBERSHIP_NO" property="membershipNo"/>		
		<result column="TNO" property="tno"/>		
		<result column="PROCESS" property="process"/>		
		<result column="PAY_TYPE" property="payType"/>		
		<result column="PAY_DATE" property="payDate"/>		
		<result column="REFUND_REASON" property="refundReason"/>		
		<result column="MEMBERSHIP_TYPE" property="membershipType"/>		
		<result column="MEMBERSHIP_COUNT" property="membershipCount"/>		
		<result column="MEMBERSHIP_PRICE" property="membershipPrice"/>	
	</resultMap>
	<resultMap type="com.kh.amd.survey.model.vo.Survey" id="surveyResultSet">
		<id property="surveyNo" column="SURVEY_NO"/>
		<result property="uNo" column="UNO"/>
		<result property="hopePeriod" column="HOPE_PERIOD"/>
		<result property="hopeBody" column="HOPE_BODY"/>
		<result property="hopeMethod" column="HOPE_METHOD"/>
		<result property="hopeGender" column="HOPE_GENDER"/>
		<result property="hopeAge" column="HOPE_AGE"/>
		<result property="dietFail" column="DIET_FAIL"/>
		<result property="hopeStart" column="HOPE_START"/>
		<result property="dietReason" column="DIET_REASON"/>
		<result property="hopeExercise" column="HOPE_EXERCISE"/>
		<result property="datExercise" column="DAT_EXERCISE"/>
		<result property="datFood" column="DAT_FOOD"/>
		<result property="disease" column="DISEASE"/>
		<result property="dayTime" column="DAY_TIME"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<result property="height" column="HEIGHT"/>
		<result property="weight" column="WEIGHT"/>
		<result property="hopeWeight" column="HOPE_WEIGHT"/>
		<result property="uAge" column="UAGE"/>
	</resultMap>
	<resultMap id="memberResultSet" type="com.kh.amd.member.model.vo.Member">
		<id column="MNO" property="mno" /> 
		<result column="NAME" property="name" />
		<result column="ID" property="userId" />
		<result column="PWD" property="userPwd" />
		<result column="PHONE" property="phone" />
		<result column="GENDER" property="gender" />
		<result column="EMAIL" property="email" />
		<result column="MTYPE" property="mtype" />
		<result column="STATUS" property="status" />
		<result column="MATCH_TIME" property="matchTime" />
		<result column="EMAIL_YN" property="emailYn" />
		<result column="ENROLL_DATE" property="enrollDate" />
		<result column="MODIFY_DATE" property="modifyDate" />
		<result column="COMPLETE_SURVEY" property="completeSurvey" />
		<collection property="attachment" column="attachmentResultSet" resultMap="attachmentResultSet" javaType="Attachment"/>
		<collection property="survey" column="surveyResultSet" resultMap="surveyResultSet" javaType="Survey"/>
		<collection property="mprocess" resultMap="mprocessResultSet" javaType="Mprocess"></collection>
	</resultMap>
	<resultMap type="Mprocess" id="mprocessResultSet">
      <id property="processNo" column="PROCESS_NO"/>
      <result property="uno" column="UNO"/>
      <result property="tno" column="TNO"/>
      <result property="transferStatus" column="TRANSFER_STATUS"/>
      <result property="matchingLevel" column="MATCHING_LEVEL"/>
      <result property="matchingAccept" column="MATCHING_ACCEPT"/>
      <result property="matchingStatus" column="MATCHING_STATUS"/>
      <result property="processDate" column="PROCESS_DATE"/>
      <result property="matchEstName" column="MATCH_EST_NAME"/>
      <result property="matchEstDay" column="MATCH_EST_DAY"/>
      <result property="matchEstContents" column="MATCH_EST_CONTENTS"/>
      <result property="matchEstPrice" column="MATCH_EST_PRICE"/>
      
      <collection property="matchEstimate" column="estimateResultSet" resultMap="estimateResultSet" javaType="Estimate"/>
   </resultMap>
	
	

	<!-- 트레이너 추가 정보 회원가입 -->
	<insert id="insertTrainerInfo" parameterType="TrainerInfo">
		INSERT INTO TUSER_INFO
		VALUES(#{mno}, #{accountName}, #{bankCode}, #{accountNo}, null, 'Y', 0, default)
	</insert>



	<!-- 진환 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->

	<!-- 1. 서브 메뉴바내에서 견적서를 클릭시 로그인한 회원의 1번 견적서 열람 -->
	<select id="selectEstimate" resultMap="estimateResultSet"
		parameterType="java.util.Map">
		SELECT E.EST_NAME, E.EST_COST, E.EST_CONTENTS, E.EST_TYPE, E.EST_NO, E.TNO, E.TRAINING_DAYS
		FROM ESTIMATE E
		JOIN MEMBER M ON (E.TNO = M.MNO)
		WHERE E.EST_TYPE = #{iestType}
		AND TNO = #{MNO}
	</select>
	<!-- 2. 견적서를 객체로 값을 전달받아 insert -->
	<insert id="insertEstimate" parameterType="Estimate">
		INSERT INTO ESTIMATE
		VALUES(EST_SEQ.NEXTVAL, #{tno}, #{estName}, #{estPrice}, #{estDay}, #{estContents}, #{estType})
	</insert>
	
	<!-- 3. 견적서를 객체로 값을 전달받아 update -->
	<update id="updateEstimate" parameterType="Estimate">
		UPDATE ESTIMATE
		SET EST_NAME = #{estName},
		EST_COST = #{estPrice},
		TRAINING_DAYS = #{estDay},
		EST_CONTENTS = #{estContents}
		WHERE TNO = #{tno}
		AND EST_TYPE = #{estType}
	</update>

	<!-- 4. 트레이너 공개 설정 변경 update -->
	<update id="updateTopen" parameterType="java.util.Map">
		UPDATE TUSER_INFO
		SET TOPEN = #{open}
		WHERE TNO = #{mno}
	</update>
	
	<!-- 5. 메인 메뉴바에 트레이너 멤버쉽 이용가능 횟수 표시 select -->
	<select id="checkRemainNum" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT REMAIN_NUM
		FROM TUSER_INFO T
		JOIN MEMBER M ON(T.TNO = M.MNO)
		WHERE T.TNO = #{mno}
	</select>
	
	<!-- 6.멤버쉽 결제시 Payment 테이블의 값 Insert -->
	<insert id="insertmemberShipPayment" parameterType="java.util.Map">
		INSERT INTO PAYMENT 
		VALUES(PAY_SEQ.NEXTVAL, #{memberShipNo}, #{mno}, '결제완료', 'card', sysdate, null)
	</insert>
	
	<!-- 7.결제완료시 멤버쉽 이용횟수를 추가 update -->
	<update id="updateRemainNum" parameterType="java.util.Map">
		UPDATE TUSER_INFO
		SET REMAIN_NUM = (REMAIN_NUM + #{iMemberShipUsage})
		WHERE TNO = #{mno}
	</update>
	
	<!-- 8. 결제내역 조회한 항목을 Count해서 반환(페이징처리) -->
	<select id="getPaymentListCount" resultType="_int">
		SELECT COUNT(*)
  		FROM PAYMENT
  		WHERE TNO = #{tno}
	</select>
	
	<!-- 9. 결제내역 조회해서 List로 반환해주는 쿼리 -->
	<select id="paymentList" resultMap="paymentResultSet" parameterType="_int">
		SELECT *
		FROM PAYMENT P
		JOIN MEMBERSHIP M ON(P.MEMBERSHIP_NO = M.MEMBERSHIP_NO)
		WHERE TNO = #{tno2}
		ORDER BY PAY_DATE DESC
	</select>
	
	<!-- 10. 환불요청신청시 Payment 테이블 update -->
	<update id="refundRequest" parameterType="java.util.Map">
		UPDATE PAYMENT
		SET PROCESS = '환불요청',
		PAY_DATE = SYSDATE,
		REFUND_REASON = #{refundReason}
		WHERE PAY_NO = #{refundId}
	</update>
	
	<!-- 11. 환불요청시 바로 멤버쉽의 횟수를 차감하는 쿼리 update-->
	<update id="minusRemainNum" parameterType="java.util.Map">
		UPDATE TUSER_INFO
		SET REMAIN_NUM = (REMAIN_NUM - #{refundCountI})
		WHERE TNO = #{mno}
	</update>
	<!-- 12. 회원찾기 - 회원리스트(페이징 처리) -->
	<select id="searchUserListCount" resultType="_int">
		SELECT COUNT(*)
  		FROM MEMBER
  		WHERE COMPLETE_SURVEY = 'Y'
  		AND MTYPE = 'U'
	</select>
	
	<!-- 12. 회원찾기  - 회원목록 리스트로 반환 -->
	<select id="showUserList" resultMap="memberResultSet">
		SELECT *
		FROM MEMBER M 
		JOIN ATTACHMENT A ON (A.PNO = M.MNO)
		JOIN SURVEY S ON (S.UNO = M.MNO)
        WHERE M.MTYPE = 'U'	
	</select>
	
	<!-- 13. 회원찾기 - 회원 목록 정렬해서 리스트로 반환 -->
	<select id="userListSort" resultMap="memberResultSet" parameterType="string">
		SELECT *
		FROM MEMBER M 
		LEFT JOIN ATTACHMENT A ON (A.BNO = M.MNO)
		JOIN SURVEY S ON (S.UNO = M.MNO)
		<if test='value == "join"'>
		    ORDER BY M.ENROLL_DATE DESC
		</if>
		<if test='value == "start"'>
		    ORDER BY S.HOPE_START DESC
		</if>
		<if test='value == "excerPeriod"'>
		    ORDER BY S.HOPE_PERIOD DESC
		</if>

		<!-- <choose>
			<when test="sort == join">
				ORDER BY M.ENROLL_DATE DESC
			</when>
			<when test="sort == start">
				ORDER BY S.HOPE_START DESC
			</when>
			<when test="sort == excerPeriod">
				ORDER BY S.HOPE_PERIOD DESC
			</when>
		</choose> -->
			
	</select>
	
	<!-- 14. 견적서 전송 - 멤버쉽 차감 -->
	<update id="memberShipDecrease">
		UPDATE TUSER_INFO
		SET REMAIN_NUM = (REMAIN_NUM - 1)
		WHERE TNO = #{tno}
	</update>
	
	<!-- 15. 견적서 보내기 - 매칭 프로세스에 insert -->
	<insert id="insertMprocess" parameterType="Mprocess" >
		INSERT INTO M_PROCESS
		VALUES(MPROCESS_SEQ.NEXTVAL, 0, #{uno}, #{tno}, 0, NULL, '매칭전', 'SEND', 
		#{matchEstimate.estName}, #{matchEstimate.estContents}, #{matchEstimate.estDay}, #{matchEstimate.estPrice}, sysdate)
			
	</insert>
	
	<!-- 16. 견적서 보낸 매칭 프로세스에 해당하는 값 모두 가져와 리스트로 반환 -->
	<select id="sendEstList" resultMap="memberResultSet">
		SELECT * 
		FROM MEMBER M
		JOIN M_PROCESS MP ON (MP.UNO = M.MNO)
		JOIN ATTACHMENT A ON (A.PNO = MP.UNO)
        JOIN SURVEY S ON (MP.UNO = S.UNO)
		WHERE MP.TNO = #{tno}
		AND MP.TRANSFER_STATUS = 'SEND'
		AND MP.MATCHING_STATUS != '매칭종료'
        AND (MP.MATCHING_LEVEL = 1 OR MP.MATCHING_LEVEL = 0)
		ORDER BY MP.PROCESS_DATE DESC
	
	</select>
	
	<!-- 17. 견적서를 이미 보낸 회원인지 찾는 쿼리 -->
	<select id="checkMprocess" resultType="_int">
		SELECT COUNT(*)
		FROM M_PROCESS
		WHERE UNO = #{uno}
		AND TNO = #{tno}	
	
	</select>
	
	<!-- 18.트레이너 매칭 (보낸요청서)의 리스트 카운트 쿼리 -->
	<select id="getTrainerMyPageMatchingListCount" resultType="_int">
	
		SELECT COUNT(*)
		FROM MEMBER M
		JOIN M_PROCESS MP ON (MP.UNO = M.MNO)
		JOIN ATTACHMENT A ON (A.PNO = MP.UNO)
        JOIN SURVEY S ON (MP.UNO = S.UNO)
		WHERE MP.TNO = #{tno}
		AND MP.TRANSFER_STATUS = 'SEND'
		AND MP.MATCHING_STATUS != '매칭종료'
        AND (MP.MATCHING_LEVEL = 1 OR MP.MATCHING_LEVEL = 0)
		ORDER BY MP.PROCESS_DATE DESC
	</select>
	
	<!-- 19.트레이너 매칭 (보낸요청서)의 리스트 페이징된 상태로 반환하는 쿼리 -->
	<select id="sendEstListPaging" resultMap="memberResultSet">
		SELECT * 
		FROM MEMBER M
		JOIN M_PROCESS MP ON (MP.UNO = M.MNO)
		JOIN ATTACHMENT A ON (A.PNO = MP.UNO)
        JOIN SURVEY S ON (MP.UNO = S.UNO)
		WHERE MP.TNO = #{tno}
		AND MP.TRANSFER_STATUS = 'SEND'
		AND MP.MATCHING_STATUS != '매칭종료'
        AND (MP.MATCHING_LEVEL = 1 OR MP.MATCHING_LEVEL = 0)
		ORDER BY MP.PROCESS_DATE DESC
	</select>
	
	<!-- 20.트레이너가 요청서를 받은 내역에 대한 리스트 갯수 리턴 쿼리 -->
	<select id="checkMyReceiveListCount" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER M
		JOIN M_PROCESS MP ON (MP.UNO = M.MNO)
		JOIN ATTACHMENT A ON (A.PNO = MP.UNO)
        JOIN SURVEY S ON (MP.UNO = S.UNO)
		WHERE MP.TNO = #{tno}
		AND MP.TRANSFER_STATUS = 'RECEIVE'
		AND MP.MATCHING_STATUS != '매칭종료'
        AND (MP.MATCHING_LEVEL = 1 OR MP.MATCHING_LEVEL = 0)
		ORDER BY MP.PROCESS_DATE DESC
	
	</select>
	
	<!-- 21. 트레이너가 요청서를 받은 내역에 대한 리스트 조회(페이징 처리 완료) -->
	<select id="myReciveList" resultMap="memberResultSet">
		SELECT * 
		FROM MEMBER M
		JOIN M_PROCESS MP ON (MP.UNO = M.MNO)
		JOIN ATTACHMENT A ON (A.PNO = MP.UNO)
        JOIN SURVEY S ON (MP.UNO = S.UNO)
		WHERE MP.TNO = #{tno}
		AND MP.TRANSFER_STATUS = 'RECEIVE'
		AND MP.MATCHING_STATUS != '매칭종료'
        AND (MP.MATCHING_LEVEL = 1 OR MP.MATCHING_LEVEL = 0)
		ORDER BY MP.PROCESS_DATE DESC
	
	</select>
	
	<!-- 22. 내가 보낸견적서를 보낸요청서에서 조회용 쿼리 -->
	<select id="matchEstimateOpen" resultMap="mprocessResultSet" parameterType="java.util.Map">
		SELECT * 
		FROM M_PROCESS
		WHERE TNO = #{tno}
		AND UNO = #{uno}
		AND TRANSFER_STATUS = 'SEND'
	
	</select>
	
	<!-- 23. 보낸 요청 철회에 대한 쿼리 -->
	<delete id="matchEstCancel" parameterType="java.util.Map">
		DELETE 
		FROM M_PROCESS
		WHERE TNO = #{tno}
		AND UNO = #{uno}
		AND TRANSFER_STATUS = 'SEND'	
	</delete>
	
	<!-- 24. 받은 요청 거부에 대한 쿼리 -->
	<update id="denyRequest" parameterType="java.util.Map">
		UPDATE M_PROCESS
		SET MATCHING_STATUS = '매칭종료', MATCHING_ACCEPT = 'N'
		WHERE TNO = #{tno}
		AND UNO = #{uno}
	
	</update>
	
	<!-- 25. 받은 요청 수락하기 쿼리 -->
	<update id="receivedReqAccept" parameterType="Mprocess">
		UPDATE M_PROCESS
		SET MATCHING_ACCEPT = 'Y', MATCHING_LEVEL = 2, PROCESS_DATE = SYSDATE,
		MATCH_EST_NAME = #{matchEstimate.estName}, MATCH_EST_CONTENTS = #{matchEstimate.estContents}, MATCH_EST_DAY = #{matchEstimate.estDay}, MATCH_EST_PRICE = #{matchEstimate.estPrice}
		WHERE TNO = #{tno}
		AND UNO = #{uno}	
	
	</update>
	
	<!-- 26. 매칭 진행중인 회원 보기 쿼리 -->
	<select id="showMatchingProgressList" resultMap="memberResultSet">
		SELECT *
		FROM MEMBER M
		JOIN M_PROCESS MP ON (MP.UNO = M.MNO)
		JOIN ATTACHMENT A ON (A.PNO = MP.UNO)
		JOIN SURVEY S ON (MP.UNO = S.UNO)
		WHERE MP.TNO = #{tno}
		AND MP.MATCHING_STATUS = '진행중'
		ORDER BY MP.PROCESS_DATE DESC

	</select>
	
	<!-- 27. 매칭 완료된 회원 보기 쿼리 -->
	<select id="showMatchingCompleteList" resultMap="memberResultSet">
		SELECT *
		FROM MEMBER M
		JOIN M_PROCESS MP ON (MP.UNO = M.MNO)
		JOIN ATTACHMENT A ON (A.PNO = MP.UNO)
		JOIN SURVEY S ON (MP.UNO = S.UNO)
		WHERE MP.TNO = #{tno}
		AND MP.MATCHING_STATUS = '매칭종료'
		ORDER BY MP.PROCESS_DATE DESC
	
	</select>
	
	<!-- 첫 회원가입이 맞는지 확인 여부의 쿼리 -->
	<select id="checkFirstMembership" resultType="_int">
		SELECT COUNT(*)
		FROM TUSER_INFO
		WHERE TNO = #{mno}
		AND FIRST_CHARGE = 'N'
	
	</select>
	
	<!-- 첫회원가입이 맞다면 환영 포인트 5회 지급 -->
	<update id="welcomeCharge">
		UPDATE TUSER_INFO
		SET REMAIN_NUM = (REMAIN_NUM + 5), FIRST_CHARGE = 'Y'
		WHERE TNO = #{mno}	
	
	</update>
	



	<!-- 효정 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->

	<!-- 1. 프로필 작성 여부 확인 (전효정) -->
	<select id="checkProfile" resultMap="profileResultSet" parameterType="Profile">
		SELECT PROFILE_NO, LINE_PROFILE, PRO_TITLE, INTRO, MEDIA, CERTIPICATE, KEYWORD FROM PROFILE WHERE TNO IN (#{mno})
	</select>

	<!-- 2. 프로필 이미지 존재 여부 확인 (전효정) -->
	<select id="checkProfileImg" resultMap="attachmentResultSet" parameterType="Attachment">
		SELECT FILE_NO, PNO, ORI_NAME, MODI_NAME, EXTENSION, FILE_LEVEL, UPLOAD_DATE, A_STATUS, FILE_PATH FROM ATTACHMENT WHERE PNO IN (#{mno}) AND ATYPE = 0
	</select>

	<!-- 3. 프로필 사진 insert (전효정) -->
	<insert id="insertProfileImg" parameterType="Attachment">
		INSERT INTO ATTACHMENT VALUES(FILE_SEQ.NEXTVAL, NULL, #{mno}, NULL, #{originalFilename}, #{changeName}, #{ext}, 0, SYSDATE, 0, 'Y', #{filePath})
	</insert>

	<!-- 4. 프로필 사진 수정 (전효정) -->
	<update id="modifyProfileImg" parameterType="Attachment">
		UPDATE ATTACHMENT SET ORI_NAME = #{originalFilename}, MODI_NAME = #{changeName}, EXTENSION = #{ext}, FILE_PATH = #{filePath}, UPLOAD_DATE = SYSDATE WHERE ATYPE = 0 AND PNO = #{mno}
	</update>

	<!-- 5. 프로필 - 내 정보 수정하기 insert (전효정) -->
	<insert id="insertProfile1" parameterType="Profile">
		INSERT INTO PROFILE VALUES(PROFILE_SEQ.NEXTVAL, #{mno}, #{lineProfile}, #{proTitle}, null, null, null, null)
	</insert>

	<!-- 6. 프로필 - 내 정보 수정하기 update (전효정) -->
	<update id="updateProfile1" parameterType="Profile">
		UPDATE PROFILE SET LINE_PROFILE = #{lineProfile}, PRO_TITLE = #{proTitle} WHERE TNO = #{mno}
	</update>

	<!-- 7. 프로필 - 미디어 수정하기 insert (전효정) -->
	<insert id="insertMediaImg" parameterType="Attachment">
		INSERT INTO ATTACHMENT VALUES(FILE_SEQ.NEXTVAL, NULL, #{mno}, NULL, #{originalFilename}, #{changeName}, #{ext}, 0, SYSDATE, 1, 'Y', #{filePath})
	</insert>

	<!-- 8. 미디어 존재 여부 확인 (전효정) -->
	<select id="checkMediaAttachment" resultMap="attachmentResultSet" parameterType="Attachment">
		SELECT * FROM ATTACHMENT WHERE PNO = #{mno} AND ATYPE = 1 AND A_STATUS = 'Y' ORDER BY FILE_NO ASC
	</select>
	
	<!-- 9. 프로필 - 트레이너 소개 insert (전효정) -->
	<insert id="insertProfile4" parameterType="Profile">
		INSERT INTO PROFILE VALUES(PROFILE_SEQ.NEXTVAL, #{mno}, null, null, #{intro}, null, null, null)
	</insert>

	<!-- 10. 프로필 - 트레이너 소개 update (전효정) -->
	<update id="updateProfile4" parameterType="Profile">
		UPDATE PROFILE SET INTRO = #{intro} WHERE TNO = #{mno}
	</update>
	
	<!-- 11. 프로필 - 서비스 키워드 insert (전효정) -->
	<insert id="insertProfile3" parameterType="Profile">
		INSERT INTO PROFILE VALUES(PROFILE_SEQ.NEXTVAL, #{mno}, null, null, null, null, null, #{keyword})
	</insert>

	<!-- 12. 프로필 - 서비스 키워드 update (전효정) -->
	<update id="updateProfile3" parameterType="Profile">
		UPDATE PROFILE SET KEYWORD = #{keyword} WHERE TNO = #{mno}
	</update>
	
	<!-- 13. 프로필 - 자격증 수정하기 insert (전효정) -->
	<insert id="insertCertificationImg" parameterType="Attachment">
		INSERT INTO ATTACHMENT VALUES(FILE_SEQ.NEXTVAL, NULL, #{mno}, NULL, #{originalFilename}, #{changeName}, #{ext}, 0, SYSDATE, 2, 'Y', #{filePath})
	</insert>
	
	<!-- 14. 자격증 존재 여부 확인 (전효정) -->
	<select id="checkCertificationAttachment" resultMap="attachmentResultSet" parameterType="Attachment">
		SELECT * FROM ATTACHMENT WHERE PNO = #{mno} AND ATYPE = 2 AND A_STATUS = 'Y' ORDER BY FILE_NO ASC
	</select>
	
	<!-- 15. 프로필 - 미디어/자격증 삭제하기 (전효정) -->
	<update id="deleteMedia" parameterType="Attachment">
		UPDATE ATTACHMENT SET A_STATUS = 'N' WHERE PNO = #{mno} AND MODI_NAME = #{thisModiName}
	</update>
	

</mapper>

